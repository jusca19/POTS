Часть 1

a)Начиная с N = 20 продолжайте увеличивать N с шагом 5 до тех пор, пока вычисление fib_p(N) будет занимать меньше пяти секунд. 
 При каком N это условие перестает выполняться? Почему так происходит?

	При N = 40. Рекурсивная реализация функции Фибоначчи без использования хвостовой рекурсии имеет
	экспоненциальную временную сложность (каждый вызов функции вызывается рекурсивно дважды). 
	Итак, для больших значений время вычислений значительно увеличивается из-за заметных промежуточных значений.

b) Сколько времени тратится на вычисление tail_fib(10000)? Почему?
	Когда для реализации функции Фибоначчи используется хвостовая рекурсия, 
	временная сложность будет линейной, поскольку рекурсивный вызов будет вызываться последним. 
	Это позволяет избежать ожидания промежуточных значений без сбора вызовов в стеке.
	Тогда расчет производится мгновенно.
	С помощью функции tc/3 модуля timer, определяем, что на выполнение функция tail_fib(10000) тратиться порядка 89702мкс. 

	19> timer:tc(fib, tail_fib, [10000]).
	{89702, 336447...6875}

Часть 2
1> c(mobius).
{ok,mobius}
2> mobius:find_square_multiples(4, 30000).
242
3> mobius:find_square_multiples(5, 30000).
844
4> mobius:find_square_multiples(6, 30000).
22020
5> timer:tc(mobius, find_square_multiples, [4,30000]).
{409,242}
6> timer:tc(mobius, find_square_multiples, [5,30000]).
{1638,844}
7> timer:tc(mobius, find_square_multiples, [6,30000]).
{106393,22020}

